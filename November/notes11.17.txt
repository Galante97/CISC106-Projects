
% MATLAB basics
a = 5

a =

     5

b = 9

b =

     9

c = a * b

c =

    45

d = a ** b
 d = a ** b
        |
{Error: Unexpected MATLAB operator.
} 
d = a ^ b

d =

     1953125

 d = b % a

d =

     9

d = mod(b, a)

d =

     4

d = b // a
 d = b // a
        |
{Error: Unexpected MATLAB operator.
} 
d = floor(b / a)

d =

     1

a = 8

a =

     8

format compact

% Creating arrays
x = [-1, 1, 3, 5]
x =
    -1     1     3     5
x = [1 2 3 4 5]
x =
     1     2     3     4     5

% indexing into an array
x = [1 3 5 7 9]
x =
     1     3     5     7     9
x(2)
ans =
     3
x(5)
ans =
     9
x(6)
{Index exceeds matrix dimensions.} 

% Creating arrays with the MATLAB colon operator
1:5
ans =
     1     2     3     4     5
1:10
ans =
  Columns 1 through 9
     1     2     3     4     5     6     7     8     9
  Column 10
    10
x = 1:10
x =
  Columns 1 through 9
     1     2     3     4     5     6     7     8     9
  Column 10
    10

% start:step:stop, and default step is 1
x = 0:1:10
x =
  Columns 1 through 9
     0     1     2     3     4     5     6     7     8
  Columns 10 through 11
     9    10
x = 0:5:20
x =
     0     5    10    15    20
x = 10:-3:1
x =
    10     7     4     1

% The stop value is only included if it's part of the
% sequence
x = 2:2:9
x =
     2     4     6     8
x = 2:2:6
x =
     2     4     6
1:2:7
ans =
     1     3     5     7
1:2:8
ans =
     1     3     5     7

% Array sections
x = 10:-1:1
x =
  Columns 1 through 9
    10     9     8     7     6     5     4     3     2
  Column 10
     1
x([2, 4, 6])
ans =
     9     7     5
x([1 7 8])
ans =
    10     4     3

% array sections using the colon operator
x(2:8)
ans =
     9     8     7     6     5     4     3
x(2:2:8)
ans =
     9     7     5     3
x(1:3:10)
ans =
    10     7     4     1

% concatenating arrays
x = 1:3
x =
     1     2     3
y = 4:6
y =
     4     5     6
z = [x y]   % [[1, 2, 3], [4, 5, 6]]
z =
     1     2     3     4     5     6
x = [1 2 3 4]
x =
     1     2     3     4
c = cat(2, x, y)
c =
     1     2     3     4     4     5     6

% size and length of an array
x = 1:10
x =
  Columns 1 through 9
     1     2     3     4     5     6     7     8     9
  Column 10
    10
length(x)
ans =
    10

size(x, 1)
ans =
     1
size(x, 2)
ans =
    10

% 2D arrays
x = [1 2 3 4]
x =
     1     2     3     4
x = [1 2; 3 4]
x =
     1     2
     3     4
y = [1 2 3; 4 5 6; 7 8 10]
y =
     1     2     3
     4     5     6
     7     8    10
x = 1:3
x =
     1     2     3
y = 4:6
y =
     4     5     6
z = [x y]
z =
     1     2     3     4     5     6
z = [x; y]
z =
     1     2     3
     4     5     6
cat(2, x, y)
ans =
     1     2     3     4     5     6
cat(1, x, y)
ans =
     1     2     3
     4     5     6

% indexing and sectioning 2D arrays
d = [1 2 3 4; 5 6 7 8; 9 10 11 12; 13 14 15 16]
d =
     1     2     3     4
     5     6     7     8
     9    10    11    12
    13    14    15    16

d(2, 3)
ans =
     7
d(4, 1)
ans =
    13
d(1:3, 3:4)
ans =
     3     4
     7     8
    11    12
d(1:2:4, 3:4)
ans =
     3     4
    11    12
d(1:3, :)
ans =
     1     2     3     4
     5     6     7     8
     9    10    11    12

% mathematical operations with arrays
% scalar product, dot prouct, and transpose
x = 1:5
x =
     1     2     3     4     5

3 * x
ans =
     3     6     9    12    15

y = 1:2:9
y =
     1     3     5     7     9
dot(x, y)
ans =
    95
x'
ans =
     1
     2
     3
     4
     5

% arithmetic operations are considered matric operations
x * x
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('mtimes')" style="font-weight:bold"> * </a>
Inner matrix dimensions must agree.} 
x * x'
ans =
    55
x' * x
ans =
     1     2     3     4     5
     2     4     6     8    10
     3     6     9    12    15
     4     8    12    16    20
     5    10    15    20    25

% scalar multiplication, matrix addition
A = [1 2 3; 4 5 6; 7 8 10]
A =
     1     2     3
     4     5     6
     7     8    10
2 * A
ans =
     2     4     6
     8    10    12
    14    16    20
B = [1 2 1; 2 0 2; 0 2 3]
B =
     1     2     1
     2     0     2
     0     2     3
C = A + B
C =
     2     4     4
     6     5     8
     7    10    13

% matrix multiplication
x = [1 2 3]
x =
     1     2     3
A
A =
     1     2     3
     4     5     6
     7     8    10
A * x'
ans =
    14
    32
    53

A * B
ans =
     5     8    14
    14    20    32
    23    34    53

eye(3)
ans =
     1     0     0
     0     1     0
     0     0     1
I = eye(3)
I =
     1     0     0
     0     1     0
     0     0     1
A * I
ans =
     1     2     3
     4     5     6
     7     8    10
A * I - I * A
ans =
     0     0     0
     0     0     0
     0     0     0

% element-wise operations
x = 1:10
x =
  Columns 1 through 9
     1     2     3     4     5     6     7     8     9
  Column 10
    10
x * x
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('mtimes')" style="font-weight:bold"> * </a>
Inner matrix dimensions must agree.} 

x .* x
ans =
  Columns 1 through 9
     1     4     9    16    25    36    49    64    81
  Column 10
   100

x ^ 2
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('mpower')" style="font-weight:bold"> ^ </a>
Inputs must be a scalar and a square matrix.
To compute elementwise POWER, use POWER (.^) instead.} 
x .^ 2
ans =
  Columns 1 through 9
     1     4     9    16    25    36    49    64    81
  Column 10
   100

x .^ x
ans =
   1.0e+10 *
  Columns 1 through 5
    0.0000    0.0000    0.0000    0.0000    0.0000
  Columns 6 through 10
    0.0000    0.0001    0.0017    0.0387    1.0000

format shortEng
x .^ x
ans =
  Columns 1 through 3
     1.0000e+000     4.0000e+000    27.0000e+000
  Columns 4 through 6
   256.0000e+000     3.1250e+003    46.6560e+003
  Columns 7 through 9
   823.5430e+003    16.7772e+006   387.4205e+006
  Column 10
    10.0000e+009
format longEngr
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('format')" style="font-weight:bold">format</a>
Unknown command option.} 
format longEng
x .^ x
ans =
  Columns 1 through 2
    1.00000000000000e+000    4.00000000000000e+000
  Columns 3 through 4
    27.0000000000000e+000    256.000000000000e+000
  Columns 5 through 6
    3.12500000000000e+003    46.6560000000000e+003
  Columns 7 through 8
    823.543000000000e+003    16.7772160000000e+006
  Columns 9 through 10
    387.420489000000e+006    10.0000000000000e+009
format short
x .^ x
ans =
   1.0e+10 *
  Columns 1 through 5
    0.0000    0.0000    0.0000    0.0000    0.0000
  Columns 6 through 10
    0.0000    0.0001    0.0017    0.0387    1.0000

x = 1:3
x =
     1     2     3
y = 4:6
y =
     4     5     6
z = x + y
z =
     5     7     9
z = x - y
z =
    -3    -3    -3
z = x .- y
 z = x .- y
        |
{Error: Unexpected MATLAB operator.
} 
diary diary
